window.SIDEBAR_ITEMS = {"fn":[["compile","Compiles!"],["compile_with_exec","Like [`compile`] but allows specifying a custom [`Executor`] that will be able to intercept build calls and add custom logic."],["compile_ws","Like [`compile_with_exec`] but without warnings from manifest parsing."],["create_bcx","Prepares all required information for the actual compilation."],["filter_default_targets","Given a list of all targets for a package, filters out only the targets that are automatically included when the user doesn’t specify any targets."],["filter_targets",""],["find_named_targets","Finds the targets for a specifically named target."],["generate_targets","Generates all the base targets for the packages the user has requested to compile. Dependencies for these targets are computed later in `unit_dependencies`."],["list_rule_targets","Returns a list of proposed targets based on command-line target selection flags."],["override_rustc_crate_types","Override crate types for given units."],["print","Executes `rustc --print <VALUE>`."],["rebuild_unit_graph_shared","This is used to rebuild the unit graph, sharing host dependencies if possible."],["remove_duplicate_doc","Removes duplicate CompileMode::Doc units that would cause problems with filename collisions."],["resolve_all_features","Gets all of the features enabled for a package, plus its dependencies’ features."],["traverse_and_share","Recursive function for rebuilding the graph."],["unmatched_target_filters","Checks if the unit list is empty and the user has passed any combination of –tests, –examples, –benches or –bins, and we didn’t match on any targets. We want to emit a warning to make sure the user knows that this run is a no-op, and their code remains unchecked despite cargo not returning any errors"],["validate_required_features","Warns if a target’s required-features references a feature that doesn’t exist."]],"mod":[["compile_filter","Filters and their rules to select which Cargo targets will be built."],["packages","See [`Packages`]."]],"struct":[["CompileOptions","Contains information about how a package should be compiled."],["Proposal","A proposed target."]]};